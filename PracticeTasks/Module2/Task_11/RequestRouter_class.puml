@startuml
class RequestRouter <<root>> {
  +routes: Route[]
  +cache: CacheEntry[]
  +schema: OpenApiSchema
  +weights: map<id: int, weight: int>
  +Forward(request: Request): result_t
  +Validate(request: Request): result_t
  +SetCache(request: Request, response: Response): result_t
  +GetFromCache(request: Request): Response
  +GetWeight(id: int, out value: int): result_t
  +SetWeight(id: int, value: int): result_t
}

class Route <<value>> {
  +dns: string
  +serviceName: string
  +params: string
}

class Request <<value>> {
  +id: int
  +data: string
}

class Response <<value>> {
  +id: int
  +data: string
}

class CacheEntry <<entity>> {
  +request_id: int
  +response: Response
}

class OpenApiSchema <<entity>> {
  +id: string
  +data: JSON
}

RequestRouter "1" --> "*" Route : has
RequestRouter "1" --> "*" CacheEntry : manages
RequestRouter "1" --> "1" OpenApiSchema : stores
CacheEntry "1" --> "1" Response : has
RequestRouter "1" *-left-> "*" Request : receives
@enduml
